// <auto-generated />
using System;
using HR_Management_System.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HR_Management_System.Migrations
{
    [DbContext(typeof(HRDBContext))]
    [Migration("20240808095926_initialDatabase")]
    partial class initialDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<int?>("DepartmentHeadId")
                        .HasColumnType("int");

                    b.Property<string>("DeptName")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("DepartmentId");

                    b.HasIndex("DepartmentHeadId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("HR_Management_System.Models.AttendanceModel.AttendanceDay", b =>
                {
                    b.Property<int>("AttendanceDayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceDayId"));

                    b.Property<DateOnly>("AttendanceDayDate")
                        .HasColumnType("date");

                    b.HasKey("AttendanceDayId");

                    b.ToTable("AttendanceDays");
                });

            modelBuilder.Entity("HR_Management_System.Models.AttendanceModel.AttendanceRecords", b =>
                {
                    b.Property<int>("AttendanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceID"));

                    b.Property<int>("AttendanceDayId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("CheckInTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("CheckOutTime")
                        .HasColumnType("time");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)");

                    b.HasKey("AttendanceID");

                    b.HasIndex("AttendanceDayId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AttendanceRecords");
                });

            modelBuilder.Entity("HR_Management_System.Models.AttendanceModel.LeaveRequests", b =>
                {
                    b.Property<int>("LeaveRequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveRequestID"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("LeaveType")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("Reason")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)");

                    b.HasKey("LeaveRequestID");

                    b.HasIndex("EmployeeId");

                    b.ToTable("LeaveRequests");
                });

            modelBuilder.Entity("HR_Management_System.Models.BenefitsModel.Benefits", b =>
                {
                    b.Property<int>("BenefitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BenefitId"));

                    b.Property<string>("BenefitName")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("EligibilityCriteria")
                        .HasColumnType("VARCHAR(200)");

                    b.HasKey("BenefitId");

                    b.ToTable("Benefits");
                });

            modelBuilder.Entity("HR_Management_System.Models.BenefitsModel.EmployeeBenefits", b =>
                {
                    b.Property<int>("EmployeeBenefitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeBenefitID"));

                    b.Property<int>("BenefitId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("VARCHAR(200)");

                    b.HasKey("EmployeeBenefitID");

                    b.HasIndex("BenefitId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeBenefits");
                });

            modelBuilder.Entity("HR_Management_System.Models.EmployeeModel.Employees", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(320)
                        .HasColumnType("VARCHAR(320)");

                    b.Property<string>("EmergencyContactPhone")
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("EmploymentStatus")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("VARCHAR(15)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("VARCHAR(25)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("VARCHAR(15)");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date");

                    b.Property<string>("HomeContactPhone")
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .HasColumnType("VARCHAR(25)");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("VARCHAR(15)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("PersonalContactPhone")
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("Photo")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<int?>("SalaryId")
                        .HasColumnType("int");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("postalCode")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("state")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("street")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DeptId");

                    b.HasIndex("JobId");

                    b.HasIndex("SalaryId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("HR_Management_System.Models.EmployeeModel.Jobs", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobId"));

                    b.Property<string>("JobTitle")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("JobId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("HR_Management_System.Models.PayrollModel.Bonuses", b =>
                {
                    b.Property<int>("BonusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BonusId"));

                    b.Property<decimal>("BonusAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("BonusDate")
                        .HasColumnType("date");

                    b.Property<string>("BonusReason")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("BonusId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Bonuses");
                });

            modelBuilder.Entity("HR_Management_System.Models.PayrollModel.Deductions", b =>
                {
                    b.Property<int>("DeductionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeductionId"));

                    b.Property<decimal>("DeductionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("DeductionDate")
                        .HasColumnType("date");

                    b.Property<string>("DeductionReason")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("DeductionId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Deductions");
                });

            modelBuilder.Entity("HR_Management_System.Models.PayrollModel.MonthlyPayroll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("PayrollMonth")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("MonthlyPayrolls");
                });

            modelBuilder.Entity("HR_Management_System.Models.PayrollModel.Payrolls", b =>
                {
                    b.Property<int>("PayrollId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayrollId"));

                    b.Property<int>("BonusId")
                        .HasColumnType("int");

                    b.Property<int?>("BonusesBonusId")
                        .HasColumnType("int");

                    b.Property<int>("DeductionId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeesEmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("SalariesSalaryId")
                        .HasColumnType("int");

                    b.Property<int>("SalaryId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("payrollMonthId")
                        .HasColumnType("int");

                    b.HasKey("PayrollId");

                    b.HasIndex("BonusId");

                    b.HasIndex("BonusesBonusId");

                    b.HasIndex("DeductionId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeesEmployeeId");

                    b.HasIndex("SalariesSalaryId");

                    b.HasIndex("SalaryId");

                    b.HasIndex("payrollMonthId");

                    b.ToTable("Payrolls");
                });

            modelBuilder.Entity("HR_Management_System.Models.PayrollModel.Salaries", b =>
                {
                    b.Property<int>("SalaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaryId"));

                    b.Property<int>("BaseSalary")
                        .HasColumnType("int");

                    b.Property<int>("PayFrequency")
                        .HasColumnType("int");

                    b.HasKey("SalaryId");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("HR_Management_System.Models.PayrollModel.TrackHistory", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryId"));

                    b.Property<decimal>("ChangeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ChangeReason")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<DateOnly>("EffectiveDate")
                        .HasColumnType("date");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("HistoryId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TrackHistory");
                });

            modelBuilder.Entity("HR_Management_System.Models.PerformanceModel.PerformanceReviews", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewID"));

                    b.Property<string>("Comments")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeesEmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("OverallScore")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ReviewDate")
                        .HasColumnType("date");

                    b.Property<int>("ReviewerId")
                        .HasColumnType("int");

                    b.HasKey("ReviewID");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeesEmployeeId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("PerformanceReviews");
                });

            modelBuilder.Entity("HR_Management_System.Models.PerformanceModel.ReviewCriteria", b =>
                {
                    b.Property<int>("CriteriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CriteriaID"));

                    b.Property<string>("CriteriaName")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(200)");

                    b.HasKey("CriteriaID");

                    b.ToTable("reviewCriterias");
                });

            modelBuilder.Entity("HR_Management_System.Models.PerformanceModel.ReviewScores", b =>
                {
                    b.Property<int>("ScoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScoreID"));

                    b.Property<int>("CriteriaId")
                        .HasColumnType("int");

                    b.Property<int>("ReviewId")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("ScoreID");

                    b.HasIndex("CriteriaId");

                    b.HasIndex("ReviewId");

                    b.ToTable("ReviewScores");
                });

            modelBuilder.Entity("HR_Management_System.Models.RecruitmentModel.Applications", b =>
                {
                    b.Property<int>("ApplicationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationID"));

                    b.Property<DateOnly>("ApplicationDate")
                        .HasColumnType("date");

                    b.Property<string>("CandidateEmail")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("CandidateName")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<int>("JobOpeningId")
                        .HasColumnType("int");

                    b.Property<string>("Resume")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("Status")
                        .HasColumnType("VARCHAR(200)");

                    b.HasKey("ApplicationID");

                    b.HasIndex("JobOpeningId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("HR_Management_System.Models.RecruitmentModel.Interviewers", b =>
                {
                    b.Property<int>("InterviewerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterviewerID"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("InterviewerID");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Interviewers");
                });

            modelBuilder.Entity("HR_Management_System.Models.RecruitmentModel.Interviews", b =>
                {
                    b.Property<int>("InterviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterviewID"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("InterviewDate")
                        .HasColumnType("date");

                    b.Property<string>("InterviewFeedback")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("InterviewOutcome")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)");

                    b.Property<int>("InterviewerId")
                        .HasColumnType("int");

                    b.Property<int?>("InterviewersInterviewerID")
                        .HasColumnType("int");

                    b.HasKey("InterviewID");

                    b.HasIndex("ApplicationId")
                        .IsUnique();

                    b.HasIndex("InterviewerId");

                    b.HasIndex("InterviewersInterviewerID");

                    b.ToTable("Interviews");
                });

            modelBuilder.Entity("HR_Management_System.Models.RecruitmentModel.JobOpenings", b =>
                {
                    b.Property<int>("JobOpeningID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobOpeningID"));

                    b.Property<DateOnly>("CloseDate")
                        .HasColumnType("date");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeesEmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("JobDescription")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<int>("JobTitleId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("OpenDate")
                        .HasColumnType("date");

                    b.HasKey("JobOpeningID");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeesEmployeeId");

                    b.HasIndex("JobTitleId");

                    b.ToTable("JobOpenings");
                });

            modelBuilder.Entity("HR_Management_System.Models.ReportingModel.ReportCategories", b =>
                {
                    b.Property<int>("ReportCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportCategoryId"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("VARCHAR(200)");

                    b.HasKey("ReportCategoryId");

                    b.ToTable("ReportCategories");
                });

            modelBuilder.Entity("HR_Management_System.Models.ReportingModel.Reports", b =>
                {
                    b.Property<int>("ReportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportID"));

                    b.Property<string>("Data")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<int>("GeneratedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("GeneratedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReportCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ReportName")
                        .HasColumnType("VARCHAR(200)");

                    b.HasKey("ReportID");

                    b.HasIndex("ReportCategoryId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Department", b =>
                {
                    b.HasOne("HR_Management_System.Models.EmployeeModel.Employees", "DepartmentHead")
                        .WithMany()
                        .HasForeignKey("DepartmentHeadId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DepartmentHead");
                });

            modelBuilder.Entity("HR_Management_System.Models.AttendanceModel.AttendanceRecords", b =>
                {
                    b.HasOne("HR_Management_System.Models.AttendanceModel.AttendanceDay", "AttendanceDay")
                        .WithMany()
                        .HasForeignKey("AttendanceDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HR_Management_System.Models.EmployeeModel.Employees", "Employee")
                        .WithMany("AttendanceRecords")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttendanceDay");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HR_Management_System.Models.AttendanceModel.LeaveRequests", b =>
                {
                    b.HasOne("HR_Management_System.Models.EmployeeModel.Employees", "Employee")
                        .WithMany("LeaveRequests")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HR_Management_System.Models.BenefitsModel.EmployeeBenefits", b =>
                {
                    b.HasOne("HR_Management_System.Models.BenefitsModel.Benefits", "Benefit")
                        .WithMany("EmployeeBenefits")
                        .HasForeignKey("BenefitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HR_Management_System.Models.EmployeeModel.Employees", "Employee")
                        .WithMany("EmployeeBenefits")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Benefit");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HR_Management_System.Models.EmployeeModel.Employees", b =>
                {
                    b.HasOne("Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HR_Management_System.Models.EmployeeModel.Jobs", "Job")
                        .WithMany()
                        .HasForeignKey("JobId");

                    b.HasOne("HR_Management_System.Models.PayrollModel.Salaries", "salary")
                        .WithMany()
                        .HasForeignKey("SalaryId");

                    b.Navigation("Department");

                    b.Navigation("Job");

                    b.Navigation("salary");
                });

            modelBuilder.Entity("HR_Management_System.Models.PayrollModel.Bonuses", b =>
                {
                    b.HasOne("HR_Management_System.Models.EmployeeModel.Employees", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("HR_Management_System.Models.PayrollModel.Deductions", b =>
                {
                    b.HasOne("HR_Management_System.Models.EmployeeModel.Employees", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("HR_Management_System.Models.PayrollModel.Payrolls", b =>
                {
                    b.HasOne("HR_Management_System.Models.PayrollModel.Bonuses", "Bonuses")
                        .WithMany()
                        .HasForeignKey("BonusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HR_Management_System.Models.PayrollModel.Bonuses", null)
                        .WithMany("Payrolls")
                        .HasForeignKey("BonusesBonusId");

                    b.HasOne("HR_Management_System.Models.PayrollModel.Deductions", "Deductions")
                        .WithMany("Payrolls")
                        .HasForeignKey("DeductionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HR_Management_System.Models.EmployeeModel.Employees", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HR_Management_System.Models.EmployeeModel.Employees", null)
                        .WithMany("Payrolls")
                        .HasForeignKey("EmployeesEmployeeId");

                    b.HasOne("HR_Management_System.Models.PayrollModel.Salaries", null)
                        .WithMany("Payrolls")
                        .HasForeignKey("SalariesSalaryId");

                    b.HasOne("HR_Management_System.Models.PayrollModel.Salaries", "Salaries")
                        .WithMany()
                        .HasForeignKey("SalaryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HR_Management_System.Models.PayrollModel.MonthlyPayroll", "MonthlyPayroll")
                        .WithMany()
                        .HasForeignKey("payrollMonthId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bonuses");

                    b.Navigation("Deductions");

                    b.Navigation("Employees");

                    b.Navigation("MonthlyPayroll");

                    b.Navigation("Salaries");
                });

            modelBuilder.Entity("HR_Management_System.Models.PayrollModel.TrackHistory", b =>
                {
                    b.HasOne("HR_Management_System.Models.EmployeeModel.Employees", "Employees")
                        .WithMany("TrackHistories")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("HR_Management_System.Models.PerformanceModel.PerformanceReviews", b =>
                {
                    b.HasOne("HR_Management_System.Models.EmployeeModel.Employees", "Employee")
                        .WithMany("PerformanceReviews")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HR_Management_System.Models.EmployeeModel.Employees", null)
                        .WithMany("ReviewsGiven")
                        .HasForeignKey("EmployeesEmployeeId");

                    b.HasOne("HR_Management_System.Models.EmployeeModel.Employees", "Reviewer")
                        .WithMany()
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("HR_Management_System.Models.PerformanceModel.ReviewScores", b =>
                {
                    b.HasOne("HR_Management_System.Models.PerformanceModel.ReviewCriteria", "ReviewCriteria")
                        .WithMany("ReviewScores")
                        .HasForeignKey("CriteriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HR_Management_System.Models.PerformanceModel.PerformanceReviews", "PerformanceReview")
                        .WithMany("ReviewScores")
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PerformanceReview");

                    b.Navigation("ReviewCriteria");
                });

            modelBuilder.Entity("HR_Management_System.Models.RecruitmentModel.Applications", b =>
                {
                    b.HasOne("HR_Management_System.Models.RecruitmentModel.JobOpenings", "JobOpening")
                        .WithMany("Applications")
                        .HasForeignKey("JobOpeningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobOpening");
                });

            modelBuilder.Entity("HR_Management_System.Models.RecruitmentModel.Interviewers", b =>
                {
                    b.HasOne("HR_Management_System.Models.EmployeeModel.Employees", "Employee")
                        .WithMany("Interviewers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HR_Management_System.Models.RecruitmentModel.Interviews", b =>
                {
                    b.HasOne("HR_Management_System.Models.RecruitmentModel.Applications", "Application")
                        .WithOne("Interviews")
                        .HasForeignKey("HR_Management_System.Models.RecruitmentModel.Interviews", "ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HR_Management_System.Models.RecruitmentModel.Interviewers", "Interviewer")
                        .WithMany()
                        .HasForeignKey("InterviewerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HR_Management_System.Models.RecruitmentModel.Interviewers", null)
                        .WithMany("Interviews")
                        .HasForeignKey("InterviewersInterviewerID");

                    b.Navigation("Application");

                    b.Navigation("Interviewer");
                });

            modelBuilder.Entity("HR_Management_System.Models.RecruitmentModel.JobOpenings", b =>
                {
                    b.HasOne("Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HR_Management_System.Models.EmployeeModel.Employees", null)
                        .WithMany("JobOpenings")
                        .HasForeignKey("EmployeesEmployeeId");

                    b.HasOne("HR_Management_System.Models.EmployeeModel.Jobs", "Jobs")
                        .WithMany()
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");

                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("HR_Management_System.Models.ReportingModel.Reports", b =>
                {
                    b.HasOne("HR_Management_System.Models.ReportingModel.ReportCategories", "ReportCategory")
                        .WithMany("Reports")
                        .HasForeignKey("ReportCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportCategory");
                });

            modelBuilder.Entity("Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("HR_Management_System.Models.BenefitsModel.Benefits", b =>
                {
                    b.Navigation("EmployeeBenefits");
                });

            modelBuilder.Entity("HR_Management_System.Models.EmployeeModel.Employees", b =>
                {
                    b.Navigation("AttendanceRecords");

                    b.Navigation("EmployeeBenefits");

                    b.Navigation("Interviewers");

                    b.Navigation("JobOpenings");

                    b.Navigation("LeaveRequests");

                    b.Navigation("Payrolls");

                    b.Navigation("PerformanceReviews");

                    b.Navigation("ReviewsGiven");

                    b.Navigation("TrackHistories");
                });

            modelBuilder.Entity("HR_Management_System.Models.PayrollModel.Bonuses", b =>
                {
                    b.Navigation("Payrolls");
                });

            modelBuilder.Entity("HR_Management_System.Models.PayrollModel.Deductions", b =>
                {
                    b.Navigation("Payrolls");
                });

            modelBuilder.Entity("HR_Management_System.Models.PayrollModel.Salaries", b =>
                {
                    b.Navigation("Payrolls");
                });

            modelBuilder.Entity("HR_Management_System.Models.PerformanceModel.PerformanceReviews", b =>
                {
                    b.Navigation("ReviewScores");
                });

            modelBuilder.Entity("HR_Management_System.Models.PerformanceModel.ReviewCriteria", b =>
                {
                    b.Navigation("ReviewScores");
                });

            modelBuilder.Entity("HR_Management_System.Models.RecruitmentModel.Applications", b =>
                {
                    b.Navigation("Interviews");
                });

            modelBuilder.Entity("HR_Management_System.Models.RecruitmentModel.Interviewers", b =>
                {
                    b.Navigation("Interviews");
                });

            modelBuilder.Entity("HR_Management_System.Models.RecruitmentModel.JobOpenings", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("HR_Management_System.Models.ReportingModel.ReportCategories", b =>
                {
                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
